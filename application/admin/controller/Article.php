<?php

namespace app\admin\controller;

use app\common\model\Category;
use think\Controller;

class Article extends Controller
{
    protected $db;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->db = new \app\common\model\Article();
    }

    //文章列表
    public function index(){
        $arcList = $this->db->getAll(2);
        $this->assign('arcList',$arcList);
        return $this->fetch();
    }
    /*
     * 添加文章
     */
    public function store(){
        //把psot请求数据交由模型处理
        if(request()->isPost()){
//            halt(input('post.'));
            $res = $this->db->store(input('post.'));

            if($res['valid']){
                //添加成功
                $this->success($res['msg'],'index');exit;
            }else{
                //添加失败
                $this->error($res['msg']);exit;
            }
        }
        //1.获取所有分类数据
        $cateData = (new Category())->getAllCate();
        $this->assign('cateData',$cateData);
        //2.获取所有标签
        $tagList = db('tag')->select();
        $this->assign('tagList',$tagList);
        return $this->fetch();
    }
    /**
     * 更新排序
     */
    public function upSort(){
        if(request()->isAjax()){
            $res = $this->db->upSort(input('post.'));
            if($res['valid']){
                //修改成功
               $this->success($res['msg'],'index');exit;
            }else{
                //修改失败
                $this->error($res['msg']);exit;
            }
        }
    }
    /**
     * 文章编辑
     */
    public function edit(){
        if(request()->isPost()){
           //halt(input('post.'));
            $res = $this->db->edit(input('post.'));
            if($res['valid']){
                //编辑成功
                $this->success($res['msg'],'index');exit;
            }else{
                //编辑失败
                $this->error($res['msg']);exit;
            }
        }
        $arc_id = input('param.arc_id');
        //1.获取所有分类数据
        $cateData = (new Category())->getAllCate();
        $this->assign('cateData',$cateData);
        //2.获取所有标签
        $tagList = db('tag')->select();
        $this->assign('tagList',$tagList);
        //3.获取旧数据
        $oldData = db('article')->where('arc_id',$arc_id)->find();
        $this->assign('oldData',$oldData);
        //4.获取所属标签
        $tagIds = db('arc_tag')->where('arc_id',$arc_id)->column('tag_id');
        $this->assign('tagIds',$tagIds);
        return $this->fetch();
    }
    /**
     * 删除文章到回收站
     */
    public function delToRecycle(){
        if(request()->isAjax()){
            //setField方法更新某一个字段的值
            $res = db('article')->where('arc_id',input('post.')['arc_id'])->setField('is_recycle',1);
            if($res){
                //修改成功
                $this->success('删除到回收站成功！','index');exit;
            }else{
                //修改失败
                $this->error('删除到回收站失败！');exit;
            }
        }
    }
    /**
     * 彻底删除数据
     */
    public function del(){
        if(request()->isAjax()){
            $res = db('article')->where('arc_id',input('post.')['arc_id'])->delete();
            if($res){
                $this->success('彻底删除数据成功！','index');exit;
            }else{
                $this->error('彻底删除数据失败，请稍后重试！');exit;
            }
        }
    }
    /**
     * 文章回收站列表
     */
    public function recycle(){
        $arcList = $this->db->getAll(1);
        $this->assign('arcList',$arcList);
        return $this->fetch();
    }
    /**
     * 恢复数据
     */
    public function outToRecycle(){
        if(request()->isAjax()){
            //setField方法更新某一个字段的值
            $res = db('article')->where('arc_id',input('post.')['arc_id'])->setField('is_recycle',2);
            if($res){
                //修改成功
                $this->success('恢复数据成功！','index');exit;
            }else{
                //修改失败
                $this->error('恢复数据失败，请稍后重试！');exit;
            }
        }
    }
}
